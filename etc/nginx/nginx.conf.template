events {
  worker_connections 1024;
}

http {

   # the upstream component nginx needs to connect to
   upstream django {
      # server unix:///path/to/your/mysite/mysite.sock; # for a file socket
      server ${NGINX_HOST}:${NGINX_PORT}; # for a web port socket (we'll use this first)
   }

   ldap_server ldapserver {
      url ${LDAP_URL};
      binddn ${LDAP_BIND_DN};
      binddn_passwd ${LDAP_BIND_DN_PASSWD};
      group_attribute ${LDAP_GROUP_ATTRIBUTE};
      group_attribute_is_dn ${LDAP_GROUP_ATTRIBUTE_IS_DN};
      require group ${LDAP_REQUIRE_GROUP};
      require valid_user;
      satisfy all;
      # Retry count for attempting to reconnect to an LDAP server if it is
      # considered "DOWN". This may happen if a KEEP-ALIVE connection to an
      # LDAP server times out or is terminated by the server end after some
      # amount of time. This can usually help with the following error:
      # http_auth_ldap: ldap_result() failed (-1: Can't contact LDAP server)
      max_down_retries_count 1;
   }

   server {
      listen 80 default_server;
      server_name localhost;
      return 301 https://$host$request_uri;
   }

   server {
      listen 443 ssl default_server;
      server_name localhost;
      charset utf-8;

      # hardcoded cert/key paths because we assume
      # the proper certs will be mounted into the container
      # at /etc/ssl/nginx
      ssl_certificate /etc/ssl/nginx/server.crt;
      ssl_certificate_key /etc/ssl/nginx/server.key;

      client_max_body_size 1M;

      # serve static assets directly from nginx
      location /static {
         alias /data/static;
      }

      # connect to django app
      location / {
         auth_ldap "Forbidden";
         auth_ldap_servers ldapserver;
         uwsgi_pass django;
         include /etc/nginx/uwsgi_params;
         # http://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_read_timeout
         uwsgi_read_timeout 60s;
      }

      access_log /var/log/nginx/access.log;
      # USE THIS IF YOU WANT VERBOSE DEBUG LOGGING error_log /var/log/nginx/error.log debug;
      error_log /var/log/nginx/error.log;
   }
}

